<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imxiaomai.persistence.mapper.ExpressMapper" >
  <resultMap id="BaseResultMap" type="com.imxiaomai.persistence.domain.Express" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="short_name" property="shortName" jdbcType="CHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="isdel" property="isdel" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, short_name, type, isdel
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.imxiaomai.persistence.domain.ExpressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from express_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from express_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from express_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.imxiaomai.persistence.domain.ExpressExample" >
    delete from express_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imxiaomai.persistence.domain.Express" >
    insert into express_info ( name, short_name, 
      type)
    values (#{#{name,jdbcType=VARCHAR}, #{shortName,jdbcType=CHAR}, 
      #{type,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.imxiaomai.persistence.domain.Express" >
    insert into express_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="shortName != null" >
        short_name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="isdel != null" >
        isdel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="shortName != null" >
        #{shortName,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imxiaomai.persistence.domain.ExpressExample" resultType="java.lang.Integer" >
    select count(*) from express_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update express_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.shortName != null" >
        short_name = #{record.shortName,jdbcType=CHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.isdel != null" >
        isdel = #{record.isdel,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update express_info
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      short_name = #{record.shortName,jdbcType=CHAR},
      type = #{record.type,jdbcType=TINYINT},
      isdel = #{record.isdel,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imxiaomai.persistence.domain.Express" >
    update express_info
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="shortName != null" >
        short_name = #{shortName,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imxiaomai.persistence.domain.Express" >
    update express_info
    set name = #{name,jdbcType=VARCHAR},
      short_name = #{shortName,jdbcType=CHAR},
      type = #{type,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getBySomeCondition" resultMap="BaseResultMap" parameterType="com.imxiaomai.persistence.domain.Express">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 25 14:53:08 CST 2015.
    -->
    
    select 
    <include refid="Base_Column_List" />
    from express_info
    where 1=1 and isdel = 0
     <if test="shortName != null and shortName != '' " >
       and short_name = #{shortName,jdbcType=CHAR}
     </if>
     <if test="name != null and name !='' " >
     	and name = #{name,jdbcType=VARCHAR}
     </if>
     <if test="type != null and type !=0 " >
     	and	type = #{type,jdbcType=TINYINT}
     </if>
  </select>
  
  
  <select id="getAllByType" resultMap="BaseResultMap" parameterType="com.imxiaomai.persistence.domain.Express">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 25 14:53:08 CST 2015.
    -->
    
    select 
    <include refid="Base_Column_List" />
    from express_info
    where 1=1 and isdel = 0 and	type = #{type,jdbcType=TINYINT}
  </select>
  
  
  
  
   <update id="updateByPair" parameterType="map" statementType="STATEMENT">
    update express_info set ${field} = ${value} where id = ${id}
  </update>
  
</mapper>