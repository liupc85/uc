<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imxiaomai.persistence.mapper.StoreFavorableMapper" >
  <resultMap id="BaseResultMap" type="com.imxiaomai.persistence.domain.StoreFavorable" >
    <id column="storeId" property="storeid" jdbcType="INTEGER" />
    <id column="type" property="type" jdbcType="TINYINT" />
    <result column="delPrice" property="delprice" jdbcType="INTEGER" />
    <result column="tips" property="tips" jdbcType="VARCHAR" />
    <result column="startTime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    storeId, type, delPrice, tips, startTime, endTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.imxiaomai.persistence.domain.StoreFavorableExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from storefavorable
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.imxiaomai.persistence.domain.StoreFavorable" >
    select 
    <include refid="Base_Column_List" />
    from storefavorable
    where storeId = #{storeid,jdbcType=INTEGER}
      and type = #{type,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.imxiaomai.persistence.domain.StoreFavorable" >
    delete from storefavorable
    where storeId = #{storeid,jdbcType=INTEGER}
      and type = #{type,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.imxiaomai.persistence.domain.StoreFavorableExample" >
    delete from storefavorable
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imxiaomai.persistence.domain.StoreFavorable" >
    insert into storefavorable (storeId, type, delPrice, 
      tips, startTime, endTime
      )
    values (#{storeid,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{delprice,jdbcType=INTEGER}, 
      #{tips,jdbcType=VARCHAR}, #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.imxiaomai.persistence.domain.StoreFavorable" >
    insert into storefavorable
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storeid != null" >
        storeId,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="delprice != null" >
        delPrice,
      </if>
      <if test="tips != null" >
        tips,
      </if>
      <if test="starttime != null" >
        startTime,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storeid != null" >
        #{storeid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="delprice != null" >
        #{delprice,jdbcType=INTEGER},
      </if>
      <if test="tips != null" >
        #{tips,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imxiaomai.persistence.domain.StoreFavorableExample" resultType="java.lang.Integer" >
    select count(*) from storefavorable
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update storefavorable
    <set >
      <if test="record.storeid != null" >
        storeId = #{record.storeid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.delprice != null" >
        delPrice = #{record.delprice,jdbcType=INTEGER},
      </if>
      <if test="record.tips != null" >
        tips = #{record.tips,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null" >
        startTime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update storefavorable
    set storeId = #{record.storeid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      delPrice = #{record.delprice,jdbcType=INTEGER},
      tips = #{record.tips,jdbcType=VARCHAR},
      startTime = #{record.starttime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imxiaomai.persistence.domain.StoreFavorable" >
    update storefavorable
    <set >
      <if test="delprice != null" >
        delPrice = #{delprice,jdbcType=INTEGER},
      </if>
      <if test="tips != null" >
        tips = #{tips,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        startTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where storeId = #{storeid,jdbcType=INTEGER}
      and type = #{type,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imxiaomai.persistence.domain.StoreFavorable" >
    update storefavorable
    set delPrice = #{delprice,jdbcType=INTEGER},
      tips = #{tips,jdbcType=VARCHAR},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP}
    where storeId = #{storeid,jdbcType=INTEGER}
      and type = #{type,jdbcType=TINYINT}
  </update>
  
  <select id="getAll" resultMap="BaseResultMap" parameterType="com.imxiaomai.persistence.domain.StoreFavorable" >
    select
    <include refid="Base_Column_List" />
    from storefavorable
  </select>
  
  
  <select id="getByStoreIdAndType" resultMap="BaseResultMap" parameterType="com.imxiaomai.persistence.domain.StoreFavorable" >
    select
    <include refid="Base_Column_List" />
    from storefavorable
    where 1=1
    and storeId = #{storeid,jdbcType=INTEGER}
    and type = #{type,jdbcType=TINYINT}
    limit 1
  </select>
  
  
</mapper>